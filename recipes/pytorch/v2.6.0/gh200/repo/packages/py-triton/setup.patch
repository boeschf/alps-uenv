diff --git i/pyproject.toml w/pyproject.toml
index e1ecf8228..447431e8f 100644
--- i/pyproject.toml
+++ w/pyproject.toml
@@ -1,5 +1,6 @@
 [build-system]
-requires = ["setuptools>=40.8.0", "wheel", "cmake>=3.18", "ninja>=1.11.1"]
+#requires = ["setuptools>=40.8.0", "wheel", "cmake>=3.18", "ninja>=1.11.1"]
+requires = ["setuptools>=40.8.0", "cmake>=3.18", "ninja>=1.11.1"]
 
 [tool.yapf]
 based_on_style = "pep8"
diff --git i/python/pyproject.toml w/python/pyproject.toml
index d96af50a5..1ef3a95e3 100644
--- i/python/pyproject.toml
+++ w/python/pyproject.toml
@@ -1,6 +1,7 @@
 
 [build-system]
-requires = ["setuptools>=40.8.0", "wheel", "cmake>=3.18", "ninja>=1.11.1", "pybind11>=2.13.1"]
+#requires = ["setuptools>=40.8.0", "wheel", "cmake>=3.18", "ninja>=1.11.1", "pybind11>=2.13.1"]
+requires = ["setuptools>=40.8.0", "cmake>=3.18", "ninja>=1.11.1", "pybind11>=2.13.1"]
 
 # We're incrementally switching from autopep8 to ruff.
 [tool.autopep8]
diff --git i/python/setup.py w/python/setup.py
index 725ba0213..60254d565 100644
--- i/python/setup.py
+++ w/python/setup.py
@@ -24,7 +24,8 @@ from dataclasses import dataclass
 from distutils.command.install import install
 from setuptools.command.develop import develop
 from setuptools.command.egg_info import egg_info
-from wheel.bdist_wheel import bdist_wheel
+#from wheel.bdist_wheel import bdist_wheel
+from setuptools.command.bdist_wheel import bdist_wheel
 
 import pybind11
 
@@ -237,6 +238,7 @@ def get_thirdparty_packages(packages: list):
     triton_cache_path = get_triton_cache_path()
     thirdparty_cmake_args = []
     for p in packages:
+        print(f"package.name = {p.name}, package.url = {p.url}")
         package_root_dir = os.path.join(triton_cache_path, p.package)
         package_dir = os.path.join(package_root_dir, p.name)
         if os.environ.get(p.syspath_var_name):
@@ -247,15 +249,23 @@ def get_thirdparty_packages(packages: list):
         input_exists = os.path.exists(version_file_path)
         input_compatible = input_exists and Path(version_file_path).read_text() == p.url
 
+        print(f"  package_dir        = {package_dir}")
+        print(f"  p.syspath_var_name = {p.syspath_var_name}")
+        print(f"  version_file_path  = {version_file_path}")
+        print(f"  input_defined      = {input_defined}")
+        print(f"  input_exists       = {input_exists}")
+        print(f"  input_compatible   = {input_compatible}")
         if is_offline_build() and not input_defined:
             raise RuntimeError(f"Requested an offline build but {p.syspath_var_name} is not set")
         if not is_offline_build() and not input_defined and not input_compatible:
+            print("  should be downloading")
             with contextlib.suppress(Exception):
                 shutil.rmtree(package_root_dir)
             os.makedirs(package_root_dir, exist_ok=True)
             print(f'downloading and extracting {p.url} ...')
             with open_url(p.url) as response:
                 if p.url.endswith(".zip"):
+                    print("  extracting zip...")
                     file_bytes = BytesIO(response.read())
                     with zipfile.ZipFile(file_bytes, "r") as file:
                         file.extractall(path=package_root_dir)
@@ -404,6 +414,7 @@ class CMakeBuild(build_ext):
         # lit is used by the test suite
         thirdparty_cmake_args = get_thirdparty_packages([get_llvm_package_info()])
         thirdparty_cmake_args += self.get_pybind11_cmake_args()
+        print(f"thirdparty cmake_args = {thirdparty_cmake_args}")
         extdir = os.path.abspath(os.path.dirname(self.get_ext_fullpath(ext.path)))
         # create build directories
         if not os.path.exists(self.build_temp):
@@ -478,6 +489,7 @@ class CMakeBuild(build_ext):
         if cmake_args_append is not None:
             cmake_args += shlex.split(cmake_args_append)
 
+        print(f"cmake_args = {cmake_args}")
         env = os.environ.copy()
         cmake_dir = get_cmake_dir()
         subprocess.check_call(["cmake", self.base_dir] + cmake_args, cwd=cmake_dir, env=env)
