#! /bin/bash

#home = /user-environment/linux-sles15-neoverse_v2/gcc-12.3.0/python-3.11.7-ad3s55au3y32t3qsi3mloxutyont4alp/bin
#include-system-site-packages = false
#version = 3.11.7
#executable = /user-environment/linux-sles15-neoverse_v2/gcc-12.3.0/python-3.11.7-ad3s55au3y32t3qsi3mloxutyont4alp/bin/python3.11
#command =
#    /user-environment/linux-sles15-neoverse_v2/gcc-12.3.0/python-3.11.7-ad3s55au3y32t3qsi3mloxutyont4alp/bin/python3.11
#    -m venv --without-pip
#    /user-environment/linux-sles15-neoverse_v2/gcc-12.3.0/python-venv-1.0-vl5q4szvym4lldhlj7tdl3zx34ckdfcq
#
#
#'/user-environment/linux-sles15-neoverse_v2/gcc-12.3.0/python-venv-1.0-vl5q4szvym4lldhlj7tdl3zx34ckdfcq/bin/python3'
#'-m' 'pip' '-vvv' '--no-input' '--no-cache-dir' '--disable-pip-version-check'
#'install' '--no-deps' '--ignore-installed' '--no-build-isolation'
#'--no-warn-script-location' '--no-index'
#'--prefix=/user-environment/linux-sles15-neoverse_v2/gcc-12.3.0/py-triton-2.1.0-dvwcyfk4ehhku2zg6ahlhpojqgcz45qj'
#'.'
#
#py_venv_loc=$(spack -C /user-environment/config location -i python-venv)
#
#py_venv_path="${py_venv_loc%/}"
#py_venv_exe="${py_venv_path}/bin/python3"
#prefix=$(dirname "${py_venv_path}")
#
#echo "py_venv_path = ${py_venv_loc}"
#echo "prefix = ${prefix}"
##${py_venv_loc}/bin/python3 -m pip freeze
#
#spack -C /user-environment/config config blame
#spack -C /user-environment/config find --long --paths
#spack -C /user-environment/config env list


mpi_loc=$(spack -C {{ env.config }} location -i cray-mpich)
pybind11_loc=$(spack -C /user-environment/config location -i py-pybind11)

spack -C /user-environment/config config blame

. {{ env.mount }}/env/._default/*/activate.sh

#pp_path=$(python3 -c 'import sysconfig; print(sysconfig.get_paths()["purelib"])')
#echo "pp_path = ${pp_path}"
#echo "pwd = $(pwd)"

#CXX=g++ CC=gcc MAX_JOBS=250 python -m pip -vvv --no-input --no-cache-dir --disable-pip-version-check install --no-binary :all: --dry-run

install_pp() {(
    local OPTIND=1
    local arg
    local git_url=""       # -u "<url>"
    local git_tag=""       # -t "@<tag>"
    local extra_env=""     # -e "key1=value1 key2=value2"
    local extra_config=""  # -c "<myconfig>"
    local extra_config2="" # -q "<myconfig>"
    while getopts ':u:t:e:c:q:' arg; do
        case "${arg}" in
            u) git_url="${OPTARG}";;
            t) git_tag="${OPTARG}";;
            e) extra_env="${OPTARG}";;
            c) extra_config="${OPTARG}";;
            q) extra_config2="${OPTARG}";;
            *) return 1 ;;# illegal option
        esac
    done
    IFS=' ' read -a extra_envs <<< "$extra_env"

    echo ""
    echo "installing python package from ${git_url}"

    export CXX=g++
    export CC=gcc
    export MAX_JOBS=250
    for env_assignment in "${extra_envs[@]}"; do
        export ${env_assignment}
    done
    eval "python \
        -m pip -vvv --no-input --no-cache-dir --disable-pip-version-check \
        install --no-build-isolation --no-warn-script-location --no-index \
        ${extra_config2} \
        ${extra_config} \
        git+${git_url}${git_tag}"

    echo ""
)}

#pip install --upgrade pip setuptools wheel

# pyarrow-hotfix
install_pp -u "https://github.com/pitrou/pyarrow-hotfix.git" -t "@v0.6"

## flash-attention
## FLASH_ATTENTION_FORCE_CXX11_ABI=TRUE - not sure about this one
#install_pp -u "https://github.com/Dao-AILab/flash-attention.git" -t "@v2.4.2" \
#    -e "FLASH_ATTENTION_FORCE_BUILD=TRUE"

### dacite
##install_pp -u "https://github.com/konradhalas/dacite.git" -t "@v1.8.1"
#
### accelerate
##install_pp -u "https://github.com/huggingface/accelerate.git" -t "@v0.27.2"

echo ""
echo "mpi is at ${mpi_loc}"
echo ""
# TransformerEngine
#install_pp -u "https://github.com/NVIDIA/TransformerEngine.git" -t "@main" \
#    -e "NVTE_FRAMEWORK=pytorch NVTE_WITH_USERBUFFERS=1"
#install_pp -u "https://github.com/aleskubicek/TransformerEngine.git" -t "@build_aarch64" \
#    -e "NVTE_FRAMEWORK=pytorch NVTE_WITH_USERBUFFERS=1 MPI_HOME=${mpi_loc}"
#install_pp -u "https://github.com/aurianer/TransformerEngine" -t "@aarch64" \
#    -e "NVTE_FRAMEWORK=pytorch NVTE_WITH_USERBUFFERS=1 MPI_HOME=${mpi_loc}"
install_pp -u "https://github.com/NVIDIA/TransformerEngine.git" -t "@main" \
    -e "NVTE_FRAMEWORK=pytorch NVTE_WITH_USERBUFFERS=1 MPI_HOME=${mpi_loc}"
#CXX=${mpi_loc}/bin/mpicxx CC=${mpi_loc}/bin/mpicc

# apex
#install_pp -u "https://github.com/NVIDIA/apex.git" -t "@b496d85fb88a801d8e680872a12822de310951fd" \
#    -e "TORCH_CUDA_ARCH_LIST=9.0" \
#    -c "--config-settings \"--build-option=--cpp_ext\" --config-settings \"--build-option=--cuda_ext\""
#install_pp -u "https://github.com/boeschf/apex.git" -t "@package" \
#    -e "TORCH_CUDA_ARCH_LIST=9.0" \
#    -c "--config-settings \"--build-option=--cpp_ext\" --config-settings \"--build-option=--cuda_ext\"" \
#    -q "--global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\""
install_pp -u "https://github.com/NVIDIA/apex.git" -t "@master" \
    -e "TORCH_CUDA_ARCH_LIST=9.0 CPLUS_INCLUDE_PATH=${pybind11_loc}/include LD_LIBRARY_PATH=${pybind11_loc}/lib" \
    -c "--config-settings=compile-args=-j255 --config-settings=--global-option=\"--cpp_ext\" --config-settings=--global-option=\"--cuda_ext\" --config-settings=--global-option=\"--distributed_adam\" --config-settings=--global-option=\"--fast_layer_norm\""

# nltk
#install_pp -u "https://github.com/nltk/nltk.git" -t "@f2a92bd7e360e39a4439e4d97540fd68f2721451"

### Megatron-LM
##install_pp -u "https://github.com/NVIDIA/Megatron-LM.git" -t "@89574689447d694bb19dd86fc8a6153b4467ba9d"
##
### Nanotron
##install_pp -u "https://github.com/huggingface/nanotron.git" -t "@v0.4"

# triton
#install_pp -u "https://github.com/openai/triton.git" -t "@main#subdirectory=python" \
#    -e "TRITON_BUILD_WITH_CLANG_LLD=true"
install_pp -u "https://github.com/openai/triton.git" -t "@989adb9a29496c22a36ef82ca69cad5dad536b9c#subdirectory=python" \
    -e "TRITON_BUILD_WITH_CLANG_LLD=true"

install_pp -u "https://github.com/mlcommons/logging.git" -t "@2.1.0-rc1"

install_pp -u "https://github.com/NVIDIA/mlperf-common.git"


